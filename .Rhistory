install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
getwd()
setwd("/home/marcos/Documents/CCT College/3 Data Exploration & Preparation/1 Semester/CA1 - 40%")
### 2. Remove all variables and Load Data
# it removes all variables stores previously
rm(list = ls())
# Loading the data and checking the structure of the dataframe
covid19_vaccination_EU_EEA_df <- read.csv("covid19_vaccination_EU_EEA.csv")
### 4. Loading the libraries
library(Hmisc)
library(readr)
library(tidyr)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(scales)
library(reshape2)
library(forcats)
library(ggthemes)
library(plotly)
library(scales)
library(fastDummies)
### 5. Describe and open the dataset
# Describe this dataset
describe(covid19_vaccination_EU_EEA_df)
# Quick look at the dataset in the next tab
View(covid19_vaccination_EU_EEA_df)
# Display the first few rows of the new columns
head(covid19_vaccination_EU_EEA_df[c("Year", "Week")])
##  6.2 Missing Values:
# Counting missing values in each column
covid19_vaccination_EU_EEA_df %>% summarise_all(funs(sum(is.na(.))))
# Filling missing numeric values with mean
covid19_vaccination_EU_EEA_df <- covid19_vaccination_EU_EEA_df %>%
mutate_if(is.numeric, ~ifelse(is.na(.), mean(., na.rm = TRUE), .))
##  6.2 Missing Values:
# Counting missing values in each column
covid19_vaccination_EU_EEA_df %>% summarise_all(funs(sum(is.na(.))))
head(covid19_vaccination_EU_EEA_df)
str(covid19_vaccination_EU_EEA_df)
##  6.2 Missing Values:
# Counting missing values in each column
missing_count <- covid19_vaccination_EU_EEA_df %>%
summarise(across(everything(), ~sum(is.na(.))))
# Filling missing values with mean for numeric columns only
covid19_vaccination_EU_EEA_df <- covid19_vaccination_EU_EEA_df %>%
mutate(across(where(is.numeric), ~ifelse(is.na(.), mean(., na.rm = TRUE), .)))
# Displaying all variables with no missing values after imputation
no_missing_post_imputation <- covid19_vaccination_EU_EEA_df %>%
summarise(across(everything(), ~sum(is.na(.))))
str(covid19_vaccination_EU_EEA_df)
head(covid19_vaccination_EU_EEA_df)
covid19_vaccination_EU_EEA_df %>% summarise_all(funs(sum(is.na(.))))
### 2. Remove all variables and Load Data
# it removes all variables stores previously
rm(list = ls())
# Loading the data and checking the structure of the dataframe
covid19_vaccination_EU_EEA_df <- read.csv("covid19_vaccination_EU_EEA.csv")
library(Hmisc)
library(readr)
library(tidyr)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(scales)
library(reshape2)
library(forcats)
library(ggthemes)
library(plotly)
library(scales)
library
getwd()
### 5. Describe and open the dataset
# Describe this dataset (it may take some time)
describe(covid19_vaccination_EU_EEA_df)
# Quick look at the dataset in the next tab
View(covid19_vaccination_EU_EEA_df)
### 6. Data Cleaning
##  6.1 Validating Data Types:
# Checking if the dataframe has correct data types
str(covid19_vaccination_EU_EEA_df)
##  6.2 Missing Values: (Denominator, NumberDosesReceived, NumberDosesExported, FirstDoseRefused)
# Showing missing values in each column
covid19_vaccination_EU_EEA_df %>% summarise_all(funs(sum(is.na(.))))
# Counting missing values in each column
missing_count <- covid19_vaccination_EU_EEA_df %>%
summarise(across(everything(), ~sum(is.na(.))))
View(missing_count)
# Filling missing values with mean for numeric columns only
covid19_vaccination_EU_EEA_df <- covid19_vaccination_EU_EEA_df %>%
mutate(across(where(is.numeric), ~ifelse(is.na(.), mean(., na.rm = TRUE), .)))
# Displaying all variables with no missing values after imputation
no_missing_post_imputation <- covid19_vaccination_EU_EEA_df %>%
summarise(across(everything(), ~sum(is.na(.))))
View(no_missing_post_imputation)
covid19_vaccination_EU_EEA_df %>% summarise_all(funs(sum(is.na(.))))
# No missing value or old deprecate command:
head(covid19_vaccination_EU_EEA_df)
View(no_missing_post_imputation)
View(no_missing_post_imputation)
### 5. Describe and open the dataset
# Describe this dataset (it may take some time)
describe(covid19_vaccination_EU_EEA_df)
# Quick look at the dataset in the next tab
View(covid19_vaccination_EU_EEA_df)
##  6.3 Normalize Data:
# Normalizing the FirstDose and SecondDose columns
covid19_vaccination_EU_EEA_df$FirstDosePerCapita <- covid19_vaccination_EU_EEA_df$FirstDose / covid19_vaccination_EU_EEA_df$Population
covid19_vaccination_EU_EEA_df$SecondDosePerCapita <- covid19_vaccination_EU_EEA_df$SecondDose / covid19_vaccination_EU_EEA_df$Population
# Check the structure of the new normalized columns
str(covid19_vaccination_EU_EEA_df[c("FirstDosePerCapita", "SecondDosePerCapita")])
# Display the first few rows of the new normalized columns Per Capita
View(covid19_vaccination_EU_EEA_df[c("FirstDosePerCapita", "SecondDosePerCapita")])
# Display the first few rows of the new normalized columns Per Capita
head(covid19_vaccination_EU_EEA_df[c("FirstDosePerCapita", "SecondDosePerCapita")])
# Check the structure of the new normalized columns
str(covid19_vaccination_EU_EEA_df[c("FirstDosePerCapita", "SecondDosePerCapita")])
# Check the structure of the new normalized columns
str(covid19_vaccination_EU_EEA_df[c("ReportingCountry", "FirstDosePerCapita", "SecondDosePerCapita")])
# Display the first few rows of the new normalized columns Per Capita
head(covid19_vaccination_EU_EEA_df[c("ReportingCountry", "FirstDosePerCapita", "SecondDosePerCapita")])
library(tidyverse)
library(lubridate)
library(ggplot2)
### Data Cleaning
##  Validating Data Types:
# Checking if the dataframe has correct data types (yeah it has)
str(covid19_vaccination_EU_EEA_df)
# it removes all variables stores previously
rm(list = ls())
covid19_vaccination_EU_EEA_df <- read.csv("~/Downloads/YouTube Video/covid19_vaccination_EU_EEA.csv")
getwd()
setwd("~/Downloads/YouTube Video/covid19_vaccination_EU_EEA.csv")
